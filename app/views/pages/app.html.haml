#entity_and_account
  =render 'pages/app/notifications'
  =render 'pages/app/entities'
  =render 'pages/app/accounts'
#account_details
  %ul{ data: { bind: "foreach: displayedAccounts" }}
    %li
      %a{ data: { bind: "text: name, attr: {href: '#account_' + id() }" }}
      %span.ui-icon.ui-icon-close{ role: 'presentation', data: { bind: "click: undisplay" }} Remove Tab
  <!-- ko foreach: displayedAccounts -->
  %div{ data: { bind: "attr: {id: 'account_' + id() }" }}
    %nav{ role: 'navigation' }
      %ul.nav#commodities_menu{ data: { bind: "visible: commoditiesMenuVisible" }}
        %li.clickable{ data: { bind: "click: showTransactionItems" }} Show Transactions
        %li.clickable{ data: { bind: "click: showHoldings" }} Show Holdings
    =render 'pages/app/holdings'
    =render 'pages/app/transactions'
  =render 'pages/app/validation'
  <!-- /ko -->

<!-- forms -->
=render 'pages/app/entity_form'
=render 'pages/app/account_form'
=render 'pages/app/attachment_form'

:javascript  
  $.event.props.push("dataTransfer");
  $(function() {
    // Initialize and bind the view model
    app = new MoneyApp();
    ko.applyBindings(app);
    
    // Initialize the tab panel and refresh when new tabs are added
    var tabs = $('#account_details').tabs();
    app.displayedAccounts.subscribe(function(accounts) {
      tabs.tabs('refresh');
      window.setTimeout(bindAttachmentDrops, 500);
    });

    function bindAttachmentDialogs() {
      $('.attachment_container').dialog({
        autoOpen: false
      });
    }

    function bindAttachmentDrops() {
      var events = "dragenter dragstart dragend dragover dragleave drag drop";
      var drops = tabs.find(".attachment_drop");
      drops.off(events, handleAttachmentDragAndDrop);
      drops.on(events, handleAttachmentDragAndDrop);
    }

    function handleAttachmentDragAndDrop(e, ui) {
      e.preventDefault();
      if (e.type == "drop") {
        $(this).removeClass("attachment_droppable");
        handleAttachmentDrop(e, $(this));
      } else if (e.type == "dragenter") {
        $(this).addClass("attachment_droppable");
      } else if (e.type == "dragleave") {
        $(this).removeClass("attachment_droppable");
      }
    }

    function handleAttachmentDrop(e, row) {
      var transactionItemId = row.data("id");
      transactionItemId = parseInt(transactionItemId);
      var transaction_item = _.find(app.selectedAccount().transaction_items(), function(item) { 
        return item.id() == transactionItemId;
      });
      var transaction = transaction_item.transaction_item.transaction;
      var attachment = new AttachmentViewModel(null, transaction);
      attachment.raw_file(e.dataTransfer.files[0]);
      attachment.save();
    }

    // Select the tab based on a click on an account in the account list
    app.selectedAccountIndex.subscribe(function(index) {
      $('#account_details').tabs('option', 'active', index);
    });

    // global method delegates
    window.getAccountPaths = function(request, callback) {
      return app.getAccountPaths(request, callback);
    };

    window.saveNewTransactionItem = function(item) {
      item.save();
      window.setTimeout(function() {
        $('.date_field').focus();
      }, 500);
    }

    // Initialize the entity form
    app.editEntity.subscribe(function(entity) {
      if (entity == null) {
        $('#entity_form').dialog('close');
      } else {
        $('#entity_form').dialog('open');
      }
    });

    $('#entity_form').dialog({ 
      autoOpen: false, 
      modal: true,
      buttons: {
        Save: function() {
          app.editEntity().save(function() { app.editEntity(null); });
        },
        Cancel: function() {
          app.editEntity().reload(function() { app.editEntity(null); });
        }
      }
    });

    // Initialize the account form
    app.editAccount.subscribe(function(account) {
      if (account == null) {
        $('#account_form').dialog('close');
      } else {
        $('#account_form').dialog('open');
      }
    });

    $('#account_form').dialog({ 
      autoOpen: false, 
      modal: true,
      buttons: {
        Save: function() {
          app.editAccount().save(function() { app.editAccount(null); });
        },
        Cancel: function() {
          app.editAccount().reload(function() { app.editAccount(null); });
        }
      }
    });

    // Initialize the attachment form
    app.editAttachment.subscribe(function(attachment) {
      if (attachment == null) {
        $('#attachment_form').dialog('close');
      } else {
        $('#attachment_form').dialog('open');
      }
    });

    $('#attachment_form').dialog({ 
      autoOpen: false, 
      modal: true,
      buttons: {
        Save: function() {
          app.editAttachment().save(function() { app.editAttachment(null); });
        },
        Cancel: function() {
          app.editAttachment().reload(function() { app.editAttachment(null); });
        }
      }
    });

  });
