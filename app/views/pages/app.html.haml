#entity_and_account
  #entity_container
    %select{ data: { bind: "options: entities, optionsText: 'name', value: selectedEntity" } }
  #account_container{ data: { bind: "with: selectedEntity()" }}
    %table.list#accounts_table{ cellspacing: 0, cellpadding: 0}
      %tr
        %th Name
        %th Balance
        %th
          %a.small_header_add_button{ href: '#', title: 'Click here to add a new account.', data: { bind: "click: newAccount" } }Add
      <!-- ko foreach: groupedAccounts -->
      %tr{ data: { bind: "css: cssClass" }}
        %td{ data: { bind: "click: display" }}
          %span{ data: { bind: "text: name, css: cssClass" }}
        %td.number_column{ data: { bind: "text: formattedBalanceWithChildren,click: display" }}
        %td.action_cell
          %a.small_edit_button{ data: { bind: "visible: canEdit(), click: edit" }, href: '#', title: 'Click here to edit this account.' } Edit
          %a.small_delete_button{ data: { bind: "visible: canDestroy(), click: destroy" }, href: '#', title: 'Click here to delete this account.' } Delete
      <!-- /ko -->
#transactions
  %ul{ data: { bind: "foreach: displayedAccounts" }}
    %li
      %a{ data: { bind: "text: name, attr: {href: '#account_' + id }" }}
      %span.ui-icon.ui-icon-close{ role: 'presentation', data: { bind: "click: undisplay" }} Remove Tab
  <!-- ko foreach: displayedAccounts -->
  %div{ data: { bind: "attr: {id: 'account_' + id }" }}
    %table.register{ cellspacing: 0, cellpadding: 0}
      %tr
        %th.number_column Date
        %th Description
        %th Account
        %th.boolean_column Rec.
        %th.number_column Amount
        %th.number_column Balance
      <!-- ko foreach: transaction_items -->
      %tr{ data: { bind: "css: $index() % 2 == 0 ? 'table_row' : 'alt_table_row'" }}
        %td.number_column{ data: { bind: "text: formattedTransactionDate" }}
        %td{ data: { bind: "text: description" }}
        %td{ data: { bind: "text: otherAccountName" }}
        %td.boolean_column{ data: { bind: "text: reconciled() ? 'X' : ''" }}
        %td.number_column{ data: { bind: "text: formattedPolarizedAmount" }}
        %td.number_column{ data: { bind: "text: formattedBalance" }}
      <!-- /ko -->
  <!-- /ko -->

<!-- Account Form -->
#account_form.dialog{ title: 'Account', data: { bind: "with: editAccount"}}
  %form
    %div
      %label{ for: 'account_account_type' } Account type
      %br
      %select#account_account_type{ data: { bind: "options: $root.accountTypes, value: account_type" }}
    %div
      %label{ for: 'account_parent' } Parent
      %br
      %select#account_parent{ data: { bind: "options: availableParents, optionsCaption: 'None', optionsText: function(a) { return a.name(); }, optionsValue: function(a) { return a.id; }, value: parent_id" }}
    %div
      %label{ for: 'account_name' } Account type
      %br
      %input#account_name{ type: 'text', data: { bind: "value: name" }}

:javascript  
  $(function() {
    // Initialize and bind the view model
    app = new MoneyApp();
    ko.applyBindings(app);
    
    // Initialize the tab panel and refresh when new tabs are added
    var tabs = $('#transactions').tabs();
    app.displayedAccounts.subscribe(function(accounts) {
      tabs.tabs('refresh');
    });
    app.selectedAccountIndex.subscribe(function(index) {
      tabs.tabs('option', 'active', index);
    });

    // Initialize the account form
    app.editAccount.subscribe(function(account) {
      if (account == null) {
        $('#account_form').dialog('close');
      } else {
        $('#account_form').dialog('open');
      }
    });

    // Initialize JQuery elements
    $('.dialog').dialog({ 
      autoOpen: false, 
      modal: true,
      buttons: {
        Save: function() {
          app.editAccount().save(function() { app.editAccount(null); });
        },
        Cancel: function() {
          app.editAccount().reload(function() { app.editAccount(null); });
        }
      }
    });

  });
