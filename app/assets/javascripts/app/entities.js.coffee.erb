#= depends_on_asset 'entity-selector'

app = angular.module 'entities', []

app.controller 'EntitiesController', ['$http', '$scope', ($http, $scope) ->
  _self = this

  $scope.accounts = []
  $scope.currentEntityId = null
  $scope.$watch 'currentEntityId', (id) ->
    _self.loadAccounts()

  @entities = []

  $http.get('/entities.json').success (data) ->
    _self.entities = data
    unless data.length == 0
      $scope.currentEntityId = data[0].id

  @newEntityName = ""
  @add = ->
    newEntity = { name: _self.newEntityName }
    $http.post('/entities.json', { entity: newEntity }).success (data) ->
      _self.entities.push(data)
      _self.newEntityName = ""

  @delete = (id) ->
    $http.delete("/entities/#{id}.json").success (data) ->
      index = _.map(_self.entities, (e) -> e.id).indexOf(id)
      _self.entities.splice(index, 1)

  @save = (entity) ->
    $http.put "/entities/#{entity.id}.json", { entity: entity }

  @loadAccounts = ->
    if $scope.currentEntityId
      url = "/entities/#{$scope.currentEntityId}/accounts.json"
      $http.get(url).then (response) ->
        $scope.accounts = _.sortBy(response.data, (a) -> a.path)
      , (error) ->
        # TODO show the error to the user
        console.log "Unable to get the accounts from the service."
        console.log error
    else
      $scope.accounts = []

  return
]

app.directive 'entitySelector', ->
  {
    restrict: 'E',
    templateUrl: '<%= asset_path('entity-selector.html') %>'
  }

app.directive 'entityManager', ->
  {
    restrcit: 'E',
    templateUrl: '<%= asset_path('entity-manager.html') %>'
  }
