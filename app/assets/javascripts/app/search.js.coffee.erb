app = angular.module 'search', []

app.controller 'SearchController', ['$rootScope', '$http', ($rootScope, $http) ->
    _self = this
    @input = ""
    @matches = []
    @handlers = [
      new SimpleMatchingHandler('entity-manager', 'Manage entities', ['entity', 'entities']),
      new SimpleMatchingHandler('account-manager', 'Manage accounts', ['accounts']),
      new AccountMatchingHandler('account-register', 'Account register', $rootScope, $http)
    ]
    @selected = null
    @execute = ->
      if @input && @input.length > 2
        _self.matches = _.reduce(@handlers, (result, handler) ->
          result.concat handler.handle(_self.input)
        , [])
      else
        _self.matches = []
    @select = (index) ->
      match = _self.matches[index]
      $rootScope.selectedSearchHandler = match.key
      _self.matches = []
      _self.input = ""
      return
    @isSelected = (key) ->
      $rootScope.selectedSearchHandler == key
    @selectFirst = (e) ->
      return unless e.keyCode == 13
      _self.select(0)
      return
    return
]

class SimpleMatchingHandler
  constructor: (elementKey, description, matchingTerms) ->
    @elementKey = elementKey
    @description = description
    @matchingTerms = matchingTerms
  handle: (input) ->
    re = RegExp(input, "i")
    isMatch = @matchingTerms.reduce (result, term) ->
      result || re.test(term)
    ,false
    if isMatch
      [{description: @description, key: @elementKey}]
    else
      []

class AccountMatchingHandler
  constructor: (elementKey, descriptionTemplate, $rootScope, $http) ->
    @elementKey = elementKey
    @descriptionTemplate = descriptionTemplate
    @http = $http
  loadAccounts: (entityId) ->
    return unless entityId
    @http.get("/entities/#{entityId}/accounts.json").then( (response) ->
      console.log "got accounts for the account matching handler"
      console.log response
    , (error) ->
      console.log "Unable to get the list of accounts for the matching handler"
      console.log error
    )
