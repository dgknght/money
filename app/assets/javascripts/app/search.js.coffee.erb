app = angular.module 'search', []

app.controller 'SearchController', ['$scope', '$http', ($scope, $http) ->
    _self = this
    @input = ""
    @matches = []
    @handlers = [
      new SimpleMatchingHandler('entity-manager', 'Manage entities', ['entity', 'entities']),
      new SimpleMatchingHandler('account-manager', 'Manage accounts', ['accounts']),
      new AccountMatchingHandler('account-register', 'Account register', $scope, $http)
    ]
    @selected = null
    @execute = ->
      if @input && @input.length > 2
        _self.matches = _.reduce(@handlers, (result, handler) ->
          result.concat handler.handle(_self.input)
        , [])
      else
        _self.matches = []
    @select = (index) ->
      match = _self.matches[index]
      $scope.selectedSearchHandler = match.info
      _self.matches = []
      _self.input = ""
      return
    @isSelected = (key) ->
      $scope.selectedSearchHandler && $scope.selectedSearchHandler.key == key
    @selectFirst = (e) ->
      return unless e.keyCode == 13
      _self.select(0)
      return
    return
]

class SimpleMatchingHandler
  constructor: (elementKey, description, matchingTerms) ->
    @elementKey = elementKey
    @description = description
    @matchingTerms = matchingTerms
  handle: (input) ->
    re = RegExp(input, "i")
    isMatch = @matchingTerms.reduce (result, term) ->
      result || re.test(term)
    ,false
    if isMatch
      [{description: @description, info: {key: @elementKey}}]
    else
      []

AccountMatchingHandler = (elementKey, descriptionTemplate, $scope, $http) ->
  _self = this
  @elementKey = elementKey
  @descriptionTemplate = descriptionTemplate
  @accounts = []
  @entityId = null

  @handle = (input) ->
    re = new RegExp input, "i"
    _.reduce($scope.accounts, (result, a) ->
      result.push {description: a.name, info: {key: _self.elementKey, accountId: a.id, accountName: a.name}} if re.test(a.name)
      return result
    , [])

  return
